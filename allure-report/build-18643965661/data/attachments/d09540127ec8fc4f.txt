INFO     root:conftest.py:182 Screenshots directory cleaned and recreated at: tests_screenshots.
INFO     root:conftest.py:194 Videos directory cleaned and recreated at: tests_recordings.
INFO     root:conftest.py:41 Starting test: test_ab_testing_content.
INFO     root:conftest.py:204 Video recording is disabled in config.py.
INFO     root:conftest.py:97 Initializing driver for browser: chrome (Config: chrome).
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 There is no [linux64] chromedriver "141.0.7390.78" for browser google-chrome "141.0.7390" in cache
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 WebDriver version 141.0.7390.78 selected
INFO     WDM:logger.py:11 Modern chrome version https://storage.googleapis.com/chrome-for-testing-public/141.0.7390.78/linux64/chromedriver-linux64.zip
INFO     WDM:logger.py:11 About to download new driver from https://storage.googleapis.com/chrome-for-testing-public/141.0.7390.78/linux64/chromedriver-linux64.zip
INFO     WDM:logger.py:11 Driver downloading response is 200
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver has been saved in cache [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.78]
INFO     root:base_page.py:74 Navigating to URL: https://the-internet.herokuapp.com/.
INFO     root:base_page.py:76 Navigation completed.
INFO     root:base_page.py:55 Waiting for page to load with indicator ('css selector', 'h1.heading') for 30s.
INFO     root:base_page.py:60 Page loaded successfully with indicator ('css selector', 'h1.heading').
INFO     root:test_ab_testing.py:15 Starting A/B Testing test.
INFO     root:base_page.py:55 Waiting for page to load with indicator ('css selector', 'div.example h3') for 30s.
INFO     root:base_page.py:60 Page loaded successfully with indicator ('css selector', 'div.example h3').
INFO     root:ab_testing_page.py:11 Retrieving title text from AB Testing page.
INFO     root:test_ab_testing.py:21 Retrieved title: A/B Test Variation 1.
INFO     root:ab_testing_page.py:15 Retrieving paragraph text from AB Testing page.
INFO     root:test_ab_testing.py:28 Retrieved paragraph: Also known as split testing. This is a way in which businesses are able to simultaneously test and learn different versions of a page to see which text and/or functionality works best towards a desired outcome (e.g. a user action such as a click-through)..
INFO     root:test_ab_testing.py:35 A/B Testing test completed successfully.
INFO     root:conftest.py:138 Quitting driver for browser: chrome.
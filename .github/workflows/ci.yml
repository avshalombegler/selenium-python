name: CI for Selenium-Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install browsers and drivers
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxtst6
          if [ "${{ matrix.browser }}" = "chrome" ]; then
            sudo apt-get install -y google-chrome-stable
          elif [ "${{ matrix.browser }}" = "firefox" ]; then
            sudo apt-get install -y firefox
            # Install geckodriver for Firefox
            wget https://github.com/mozilla/geckodriver/releases/download/v0.35.0/geckodriver-v0.35.0-linux64.tar.gz
            tar -xzf geckodriver-v0.35.0-linux64.tar.gz
            sudo mv geckodriver /usr/local/bin/
            geckodriver --version
            firefox --version
          fi

      # To enable video recording in CI (Change VIDEO_RECORDING to True)
      # - name: Install Xvfb
      #   run: |
      #     sudo apt-get install -y xvfb

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip openjdk-11-jre
          curl -o allure-commandline.zip -L https://github.com/allure-framework/allure2/releases/download/2.35.1/allure-2.35.1.zip
          unzip allure-commandline.zip -d allure-2.35.1
          sudo mv allure-2.35.1 /usr/local/allure
          echo "/usr/local/allure/bin" >> $GITHUB_PATH
          # Verify Allure installation
          java -version
          allure --version
          ls -l /usr/local/allure/bin

      - name: Create .env file
        run: |
          echo "BASE_URL=https://the-internet.herokuapp.com/" > .env
          echo "BROWSER=${{ matrix.browser }}" >> .env
          echo "SHORT_TIMEOUT=3" >> .env
          echo "LONG_TIMEOUT=10" >> .env
          echo "VIDEO_RECORDING=False" >> .env
          echo "HEADLESS=True" >> .env
          echo "MAXIMIZED=False" >> .env
          echo "USERNAME=tomsmith" >> .env
          echo "PASSWORD=SuperSecretPassword!" >> .env

      # - name: Run Pytest with Allure under Xvfb
      #   run: |
      #     export DISPLAY=:99
      #     Xvfb :99 -screen 0 1920x1080x24 &
      #     pytest tests/ -v --html=reports/report.html --self-contained-html --alluredir=reports/allure-results --reruns 2 --reruns-delay 1
      # - name: Run Pytest with Allure
        # Run with reruns
        # run: pytest tests/ -v --html=reports/report.html --self-contained-html --alluredir=reports/allure-results --reruns 2 --reruns-delay 1
        # Run without reruns
        # run: pytest tests/ -v --html=reports/report.html --self-contained-html --alluredir=reports/allure-results
      
      - name: Run Pytest with Allure
        run: |
          if [ "${{ matrix.browser }}" = "firefox" ]; then
            xvfb-run --auto-servernum pytest tests/ -v --html=reports/report.html --self-contained-html --alluredir=reports/allure-results
          else
            pytest tests/ -v --html=reports/report.html --self-contained-html --alluredir=reports/allure-results
          fi

      - name: Generate Allure report
        if: always()
        run: allure generate reports/allure-results --clean -o reports/allure-report

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}-${{ github.run_id }}
          path: reports/allure-results/

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.browser }}-${{ github.run_id }}
          path: reports/allure-report/

      - name: Upload Videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-videos-${{ matrix.browser }}-${{ github.run_id }}
          path: tests_recordings/

      - name: Upload Screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-screenshots-${{ matrix.browser }}-${{ github.run_id }}
          path: tests_screenshots/